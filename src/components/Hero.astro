<div class="hero align-center">
  <hgroup>
    <h1>
      Hi! My name is <br>
      <span class="magic">
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
          <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
          </svg>
        </span>
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
          <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
          </svg>
        </span>
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
          <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
          </svg>
        </span>
        <span class="magic-text md:text-6xl lg:text-8xl uppercase font-black">Haico</span>
      </span>
    </h1>
    <p>I'm an <strong>UX Designer</strong> with a ❤️ for Web Accessibility ✨</p>
  </hgroup>
  <div class="scroll">
    <p>Scroll</p>
  </div>
</div>

<script>
  let index = 0
  let interval = 1000

  const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min

  const animate = star => {
    star.style.setProperty('--star-left', `${rand(-10, 100)}%`)
    star.style.setProperty('--star-top', `${rand(-40, 80)}%`)

    star.style.animation = 'none'
    star.offsetHeight
    star.style.animation = ''
  }

  for (const star of document.getElementsByClassName('magic-star')) {
    setTimeout(() => {
      animate(star)
      
      setInterval(() => animate(star), 1500)
    }, index++ * (interval / 4))
  }
</script>

<style lang="scss">
  .hero {
    position: relative;
    height: 100vh;
  }

  hgroup {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    text-align: center;

    h1 {
      font-size: 7rem;
      font-weight: 400;
      line-height: 1.2;
    }

    span {
      font-weight: 700;
      text-transform: uppercase;
    }

    p {
      font-size: 2rem;
      font-weight: 300;
      line-height: 1.5;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background-repeat: no-repeat;
    }

    &::before {
      top: -60%;
      left: -30%;
      background-image: url('/dotgrid-upper.png');
    }

    &::after {
      bottom: -90%;
      right: -91%;
      background-image: url('/dotgrid-lower.png');
    }
  }

  .magic {
    display: inline-block;
    position: relative;
  }

  .magic-star {
    --size: clamp(10px, 1vw, 20px);
    animation: scale 1s ease forwards;
    display: block;
    height: var(--size);
    left: var(--star-left);
    position: absolute;
    top: var(--star-top);
    width: var(--size);

    svg {
      animation: rotate 1000ms linear infinite;
      display: block;
      opacity: 0.8;

      path {
        fill: rgb(var(--primary-color));
      }
    }
  }

  .magic-text {
    animation: background-pan 3s linear infinite;
    background: linear-gradient(
      to right,
      rgb(var(--primary-color)),
      rgb(var(--primary-color)),
      rgb(var(--secondary-color)),
      rgb(var(--primary-color))
    );
    background-size: 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    white-space: nowrap;
    font-family: var(--font-family-special);
  }

  .scroll {
    position: absolute;
    bottom: -300px;
    left: 50%;
    transform: translateX(-50%);

    p {
      text-transform: uppercase;
    }

    &::after {
      content: '';
      display: block;
      margin-top: 1rem;
      margin-left: 50%;
      width: 1px;
      height: 400px;
      background-color: rgb(255, 255, 255, 0.2);
    }
  }

  @keyframes background-pan {
    from {
      background-position: 0% center;
    }
    
    to {
      background-position: -200% center;
    }
  }

  @keyframes scale {
    from, to {
      transform: scale(0);
    }
    
    50% {
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    
    to {
      transform: rotate(180deg);
    }
  }
</style>
